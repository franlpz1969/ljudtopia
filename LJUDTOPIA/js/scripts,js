/**
 * LJUDTOPIA.com - Main JavaScript file
 * Handles responsive navigation, language selection, and other interactive features
 */

document.addEventListener('DOMContentLoaded', function() {
    // Mobile menu toggle
    const menuToggle = document.querySelector('.menu-toggle');
    const mainNav = document.querySelector('.main-nav');
    
    if (menuToggle) {
        menuToggle.addEventListener('click', function() {
            mainNav.classList.toggle('active');
        });
    }
    
    // Language selector functionality
    const languageFlags = document.querySelectorAll('.lang-flag');
    
    languageFlags.forEach(flag => {
        flag.addEventListener('click', function(e) {
            e.preventDefault();
            const lang = this.getAttribute('data-lang');
            setLanguage(lang);
        });
    });
    
    // Contact form validation (if present on the page)
    const contactForm = document.getElementById('contact-form');
    
    if (contactForm) {
        contactForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Simple validation
            let isValid = true;
            const requiredFields = contactForm.querySelectorAll('[required]');
            
            requiredFields.forEach(field => {
                if (!field.value.trim()) {
                    isValid = false;
                    field.classList.add('error');
                } else {
                    field.classList.remove('error');
                }
            });
            
            // Email validation if email field exists
            const emailField = contactForm.querySelector('input[type="email"]');
            if (emailField && emailField.value.trim()) {
                const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (!emailPattern.test(emailField.value)) {
                    isValid = false;
                    emailField.classList.add('error');
                }
            }
            
            if (isValid) {
                // Simulate form submission
                alert('Formulario enviado correctamente. Te responderemos en breve.');
                contactForm.reset();
                
                // In a real implementation, you would use AJAX to submit the form
                // Example:
                // const formData = new FormData(contactForm);
                // fetch('submit-form.php', {
                //     method: 'POST',
                //     body: formData
                // })
                // .then(response => response.json())
                // .then(data => {
                //     console.log('Success:', data);
                // })
                // .catch(error => {
                //     console.error('Error:', error);
                // });
            } else {
                alert('Por favor, completa todos los campos obligatorios correctamente.');
            }
        });
    }
    
    // Gallery image lightbox (if gallery exists on the page)
    const galleryItems = document.querySelectorAll('.gallery-item img');
    
    if (galleryItems.length > 0) {
        galleryItems.forEach(item => {
            item.addEventListener('click', function() {
                openLightbox(this.src, this.alt);
            });
        });
    }
    
    // Accordion functionality for FAQ or other expandable content
    const accordionHeaders = document.querySelectorAll('.accordion-header');
    
    if (accordionHeaders.length > 0) {
        accordionHeaders.forEach(header => {
            header.addEventListener('click', function() {
                this.classList.toggle('active');
                const content = this.nextElementSibling;
                
                if (content.style.maxHeight) {
                    content.style.maxHeight = null;
                } else {
                    content.style.maxHeight = content.scrollHeight + 'px';
                }
            });
        });
    }
});

/**
 * Set the website language and redirect to the appropriate page
 * @param {string} lang - Language code (es, sv, en, de)
 */
function setLanguage(lang) {
    // Get current page name
    const currentPage = window.location.pathname.split('/').pop() || 'index.html';
    
    // Map of pages in different languages
    const pageMap = {
        'es': {
            'index.html': 'index.html',
            'inicio.html': 'inicio.html',
            'servicios.html': 'servicios.html',
            'info.html': 'info.html',
            'conceptos.html': 'conceptos.html',
            'tjänster.html': 'tjänster.html',
            'services.html': 'services.html'
        },
        'sv': {
            'index.html': 'index-sv.html',
            'inicio.html': 'tjänster.html',
            'servicios.html': 'tjänster-tjanster.html',
            'info.html': 'tjänster-info.html',
            'conceptos.html': 'tjänster-koncept.html',
            'tjänster.html': 'tjänster.html',
            'services.html': 'tjänster.html'
        },
        'en': {
            'index.html': 'index-en.html',
            'inicio.html': 'services.html',
            'servicios.html': 'services-services.html',
            'info.html': 'services-info.html',
            'conceptos.html': 'services-concepts.html',
            'tjänster.html': 'services.html',
            'services.html': 'services.html'
        },
        'de': {
            'index.html': 'index-de.html',
            'inicio.html': 'dienste.html',
            'servicios.html': 'dienste-services.html',
            'info.html': 'dienste-info.html',
            'conceptos.html': 'dienste-konzepte.html',
            'tjänster.html': 'dienste.html',
            'services.html': 'dienste.html'
        }
    };
    
    // Set language cookie
    document.cookie = `preferredLanguage=${lang}; path=/; max-age=31536000`; // 1 year
    
    // Redirect to the appropriate page
    if (pageMap[lang] && pageMap[lang][currentPage]) {
        window.location.href = pageMap[lang][currentPage];
    } else {
        // Fallback to main page of selected language
        const mainPages = {
            'es': 'inicio.html',
            'sv': 'tjänster.html',
            'en': 'services.html',
            'de': 'dienste.html'
        };
        window.location.href = mainPages[lang] || 'index.html';
    }
}

/**
 * Create and open a lightbox with the selected image
 * @param {string} src - Image source URL
 * @param {string} alt - Image alt text
 */
function openLightbox(src, alt) {
    // Create lightbox elements
    const lightbox = document.createElement('div');
    lightbox.className = 'lightbox';
    
    const lightboxContent = document.createElement('div');
    lightboxContent.className = 'lightbox-content';
    
    const image = document.createElement('img');
    image.src = src;
    image.alt = alt || '';
    
    const caption = document.createElement('p');
    caption.textContent = alt || '';
    
    const closeBtn = document.createElement('span');
    closeBtn.className = 'lightbox-close';
    closeBtn.innerHTML = '&times;';
    
    // Assemble lightbox elements
    lightboxContent.appendChild(closeBtn);
    lightboxContent.appendChild(image);
    if (alt) lightboxContent.appendChild(caption);
    lightbox.appendChild(lightboxContent);
    
    // Add to document
    document.body.appendChild(lightbox);
    
    // Prevent body scrolling
    document.body.style.overflow = 'hidden';
    
    // Add event listeners
    closeBtn.addEventListener('click', closeLightbox);
    lightbox.addEventListener('click', function(e) {
        if (e.target === lightbox) {
            closeLightbox();
        }
    });
    
    // Add keyboard event listener (ESC to close)
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeLightbox();
        }
    });
}

/**
 * Close the lightbox
 */
function closeLightbox() {
    const lightbox = document.querySelector('.lightbox');
    if (lightbox) {
        lightbox.remove();
        document.body.style.overflow = ''; // Restore scrolling
        
        // Remove keyboard event listener
        document.removeEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeLightbox();
            }
        });
    }
}

/**
 * LJUDTOPIA.com - Gallery JavaScript file
 * Handles gallery filtering and lightbox functionality
 */

document.addEventListener('DOMContentLoaded', function() {
    // Project filtering
    const filterButtons = document.querySelectorAll('.filter-btn');
    const galleryItems = document.querySelectorAll('.gallery-item');
    
    filterButtons.forEach(button => {
        button.addEventListener('click', function() {
            // Remove active class from all buttons
            filterButtons.forEach(btn => btn.classList.remove('active'));
            
            // Add active class to clicked button
            this.classList.add('active');
            
            // Get filter value
            const filterValue = this.getAttribute('data-filter');
            
            // Filter gallery items
            galleryItems.forEach(item => {
                if (filterValue === 'all') {
                    item.style.display = 'block';
                } else {
                    const categories = item.getAttribute('data-category').split(' ');
                    if (categories.includes(filterValue)) {
                        item.style.display = 'block';
                    } else {
                        item.style.display = 'none';
                    }
                }
            });
        });
    });
    
    // Lightbox functionality
    galleryItems.forEach(item => {
        const img = item.querySelector('img');
        const caption = item.querySelector('.gallery-caption');
        
        img.addEventListener('click', function() {
            createLightbox(this.src, caption.textContent);
        });
    });
});

/**
 * Create and open a lightbox with the selected image
 * @param {string} src - Image source URL
 * @param {string} caption - Image caption text
 */
function createLightbox(src, caption) {
    // Create lightbox elements
    const lightbox = document.createElement('div');
    lightbox.className = 'lightbox';
    
    const lightboxContent = document.createElement('div');
    lightboxContent.className = 'lightbox-content';
    
    const image = document.createElement('img');
    image.src = src;
    
    const closeBtn = document.createElement('span');
    closeBtn.className = 'lightbox-close';
    closeBtn.innerHTML = '&times;';
    
    const captionElement = document.createElement('div');
    captionElement.className = 'lightbox-caption';
    captionElement.textContent = caption;
    
    // Assemble lightbox elements
    lightboxContent.appendChild(closeBtn);
    lightboxContent.appendChild(image);
    lightboxContent.appendChild(captionElement);
    lightbox.appendChild(lightboxContent);
    
    // Add to document
    document.body.appendChild(lightbox);
    
    // Prevent body scrolling
    document.body.style.overflow = 'hidden';
    
    // Add event listeners
    closeBtn.addEventListener('click', closeLightbox);
    lightbox.addEventListener('click', function(e) {
        if (e.target === lightbox) {
            closeLightbox();
        }
    });
    
    // Add keyboard navigation
    document.addEventListener('keydown', keyboardNavigation);
}

/**
 * Close the lightbox
 */
function closeLightbox() {
    const lightbox = document.querySelector('.lightbox');
    if (lightbox) {
        lightbox.remove();
        document.body.style.overflow = ''; // Restore scrolling
        
        // Remove keyboard event listener
        document.removeEventListener('keydown', keyboardNavigation);
    }
}

/**
 * Handle keyboard navigation in lightbox
 * @param {KeyboardEvent} e - Keyboard event
 */
function keyboardNavigation(e) {
    if (e.key === 'Escape') {
        closeLightbox();
    } else if (e.key === 'ArrowRight') {
        navigateGallery('next');
    } else if (e.key === 'ArrowLeft') {
        navigateGallery('prev');
    }
}

/**
 * Navigate to next or previous image in gallery
 * @param {string} direction - Direction to navigate ('prev' or 'next')
 */
function navigateGallery(direction) {
    const lightboxImg = document.querySelector('.lightbox-content img');
    if (!lightboxImg) return;
    
    // Get current src
    const currentSrc = lightboxImg.src;
    
    // Get all visible gallery items
    const visibleItems = Array.from(document.querySelectorAll('.gallery-item')).filter(item => {
        return item.style.display !== 'none';
    });
    
    // Find index of current image
    let currentIndex = -1;
    visibleItems.forEach((item, index) => {
        const img = item.querySelector('img');
        if (img.src === currentSrc) {
            currentIndex = index;
        }
    });
    
    // If current image is not found in gallery, do nothing
    if (currentIndex === -1) return;
    
    // Calculate new index
    let newIndex;
    if (direction === 'next') {
        newIndex = (currentIndex + 1) % visibleItems.length;
    } else {
        newIndex = (currentIndex - 1 + visibleItems.length) % visibleItems.length;
    }
    
    // Get new image and caption
    const newItem = visibleItems[newIndex];
    const newImg = newItem.querySelector('img');
    const newCaption = newItem.querySelector('.gallery-caption').textContent;
    
    // Update lightbox
    lightboxImg.src = newImg.src;
    document.querySelector('.lightbox-caption').textContent = newCaption;
}